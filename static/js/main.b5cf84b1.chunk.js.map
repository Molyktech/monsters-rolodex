{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/search/SearchField.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","name","email","CardList","monsters","map","SearchField","placeholder","handleChange","type","onChange","App","e","preventDefault","setState","searchValue","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,eACR,6BAAKH,EAAQI,OACb,4BAAIJ,EAAQK,YCJLC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKN,UAAU,YAAf,SACGM,EAASC,KAAI,SAACR,GACb,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCLrBM,G,MAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACzC,OACE,uBAAOC,KAAK,SAASX,UAAU,SAASY,SAAUF,EAAcD,YAAaA,MCA5DI,G,wDACnB,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GACdA,EAAEC,iBACF,EAAKC,SAAS,CAAEC,YAAaH,EAAEI,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC7B,GACxC,OAAOA,EAAQI,KAAK0B,cAAcC,SAASb,MAE7C,OACE,sBAAKjB,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAaU,aAAcgB,KAAKhB,aAAcD,YAAY,oBAC1D,cAAC,EAAD,CAAUH,SAAUqB,W,GA3BKI,cCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b5cf84b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.styles.css\";\r\n\r\nexport const Card = ({ monster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${monster.id}?set=set2`} />\r\n      <h1>{monster.name}</h1>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/Card.component\";\r\nimport \"./CardList.styles.css\";\r\n\r\nexport const CardList = ({ monsters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => {\r\n        return <Card key={monster.id} monster={monster} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./SearchField.styles.css\";\r\n\r\nexport const SearchField = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input type=\"search\" className=\"search\" onChange={handleChange} placeholder={placeholder} />\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/CardList.component\";\nimport { SearchField } from \"./components/search/SearchField.component\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchValue: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({ searchValue: e.target.value });\n  };\n  render() {\n    const { monsters, searchValue } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchValue);\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchField handleChange={this.handleChange} placeholder=\"Search Monsters\" />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}